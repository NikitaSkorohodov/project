<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Language Switcher</title>
  <style>
    .row .col.s6 {
      width: 400px;
      margin-left: auto;
      left: auto;
      right: auto;
    }
    .card .card-image img {
      height: 300px;
      display: block;
      border-radius: 2px 2px 0 0;
      position: relative;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      width: 100%;
      object-fit: cover;
    }
    .row {
      margin-left: 30px; /* Add left margin */
    }
  </style>
</head>
<body>


  {{#if courses.length}}
    <div class="row">
      {{#each courses}}
        <div class="col s6">
          <div class="card">
            <div class="card-image">
              <img src="{{img}}" alt="{{title}}">
            </div>
            <div class="card-content">
              <span class="card-title">{{title}}</span>
              <p class="price">{{price}}</p>
            </div>
            <div class="card-action actions">
              <a href="/courses/{{id}}" target="_blank" class="more-details">more details</a>
              <a href="/courses/{{id}}/edit?allow=true" class="edit">Edit</a>
              <form action="/card/add" method="POST">
                <input type="hidden" name="id" value="{{id}}">
                <button type="submit" class="btn btn-primary buy">Buy</button>
              </form>
            </div>
          </div>
        </div>
        {{#if @index_even}}
          </div><div class="row">
        {{/if}}
      {{/each}}
    </div>
  {{else}}
    <p id="not_available">This technology is not yet available</p>
  {{/if}}

  <script>
    async function fetchTranslation(language) {
      try {
        const response = await fetch(`${language}.json`);
        if (!response.ok) {
          throw new Error(`Failed to load ${language} translations`);
        }
        const translations = await response.json();
        return translations;
      } catch (error) {
        console.error('Error fetching translations:', error);
        return null;
      }
    }

    function applyTranslations(translations) {
      if (!translations) return;


      document.querySelectorAll('.more-details').forEach((element) => {
        element.innerText = translations.more_details;
      });

      document.querySelectorAll('.edit').forEach((element) => {
        element.innerText = translations.edit;
      });

      document.querySelectorAll('.buy').forEach((element) => {
        element.innerText = translations.buy;
      });

      document.getElementById('not_available').innerText = translations.not_available;
    }

    async function changeLanguage(language) {
      const translations = await fetchTranslation(language);
      applyTranslations(translations);
    }
  </script>
</body>
</html>
